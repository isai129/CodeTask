"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY,一个特定 Django 安装的密钥。用于提供 加密签名，并且应该设置为一个唯一的、不可预测的值。
SECRET_KEY = 'django-insecure-2^7l=4jka82yqk9h1%*!fv3r_l0fp-8s309i_ua$=pe_05lku6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS,一个代表这个 Django 网站可以服务的主机／域名的字符串列表。这是一个安全措施，以防止 HTTP 主机头攻击
ALLOWED_HOSTS = []

# Application definition,一个字符串的列表，表示在这个 Django 安装中所有被启用的应用程序。每一个字符串都应该是一个 Python 的点分隔路径。

INSTALLED_APPS = [
    'polls.apps.PollsConfig',
    'django.contrib.admin',  # -- 管理员站点
    'django.contrib.auth',  # -- 认证授权系统
    'django.contrib.contenttypes',  # -- 内容类型框架
    'django.contrib.sessions',  # -- 会话框架
    'django.contrib.messages',  # -- 消息框架
    'django.contrib.staticfiles',  # - 管理静态文件的框架
]
# MIDDLEWARE,要使用的中间件列表
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ROOT_URLCONF,一个字符串，代表你的根 URLconf 的完整 Python 导入路径
ROOT_URLCONF = 'mysite.urls'

# TEMPLATES,一个包含所有 Django 模板引擎的配置的列表。列表中的每一项都是一个字典，包含了各个引擎的选项。
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',   # 要使用的模板后端
        'DIRS': [],  # 按照搜索顺序，引擎应该查找模板源文件的目录。
        'APP_DIRS': True,  # 擎是否应该在已安装的应用程序中查找模板源文件
        'OPTIONS': {  # 要传递给模板后台的额外参数。根据模板后端的不同，可用的参数也不同。
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# Django 内置服务器（如 runserver）将使用的 WSGI 应用对象的完整 Python 路径。
# django-admin startproject 管理命令将创建一个标准的 wsgi.py 文件，其中有一个 application 可调用，并将此配置指向该 application。
WSGI_APPLICATION = 'mysite.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


# DATABASES:一个包含所有数据库配置的字典，用于 Django。它是一个嵌套的字典，其内容是将一个数据库别名映射到一个包含单个数据库选项的字典中。
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

#  AUTH_PASSWORD_VALIDATORS:用于检查用户密码强度的验证器列表
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'  # 代表本次安装的语言代码的字符串,`USE_I18N' 必须是激活状态，该配置才会有效果。

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = False  # 一个布尔值，用于指定是否应该启用 Django 的翻译系统。这提供了一个关闭翻译系统的方法，以保证性能。

USE_TZ = True  # 一个布尔值，用于指定 Django 是否默认使用时区感知。如果设置为 True，Django 将在内部使用时区感知的日期。

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'  # 引用位于 STATIC_ROOT 中的静态文件时要使用的 URL。

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # 默认的主键字段类型，用于没有带有 primary_key=True 字段的模型。
